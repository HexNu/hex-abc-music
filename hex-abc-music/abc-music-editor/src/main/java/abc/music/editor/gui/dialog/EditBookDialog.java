package abc.music.editor.gui.dialog;

import abc.music.core.domain.Book;
import abc.music.core.domain.Tune;
import abc.music.editor.AbcMusicEditor;
import java.awt.Component;
import java.awt.Container;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JCheckBox;
import javax.swing.JPanel;

/**
 *
 * @author hl
 */
public class EditBookDialog extends AmeDialog<Book> {

    private final Book book;
    private final List<Tune> bookTunes = new ArrayList<>();
    private final List<Tune> otherTunes = new ArrayList<>();

    public EditBookDialog(AbcMusicEditor editor, Book book) {
        super(editor, "Edit Book");
        this.book = book;
        setFields();
    }

    @Override
    protected void init() {
        initComponents();
        bookTunesScrollPane.getVerticalScrollBar().setUnitIncrement(10);
        otherTunesScrollPane.getVerticalScrollBar().setUnitIncrement(10);
    }

    private void setFields() {
        if (book.getName() != null) {
            nameTextField.setText(book.getName());
        }
        if (book.getIngress() != null) {
            ingressTextField.setText(book.getIngress());
        }
        book.getTunes().forEach((tune) -> {
            bookTunes.add(tune);
        });
        editor.getProject().getTunes().forEach((tune) -> {
            if (!bookTunes.contains(tune)) {
                otherTunes.add(tune);
            }
        });
        sortList(otherTunes);
        updatePanels();
    }

    private void sortList(List<Tune> tuneList) {
        Collections.sort(tuneList, (a, b) -> a.getName().compareTo(b.getName()));
    }

    private void updatePanels() {
        updateBookTunesPanel();
        updateOtherTunesPanel();
    }

    private void updateOtherTunesPanel() {
        sortList(otherTunes);
        otherTunesPanel.removeAll();
        otherTunes.stream().forEach((tune) -> {
            otherTunesPanel.add(new BookItem(tune));
        });
        otherTunesPanel.repaint();
        otherTunesPanel.revalidate();
    }

    private void updateBookTunesPanel() {
        bookTunesPanel.removeAll();
        bookTunes.stream().forEach((tune) -> {
            bookTunesPanel.add(new BookItem(tune));
        });
        bookTunesPanel.repaint();
        bookTunesPanel.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ingressTextField = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        bookTunesScrollPane = new javax.swing.JScrollPane();
        bookTunesPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        otherTunesScrollPane = new javax.swing.JScrollPane();
        otherTunesPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        addToBookButton = new javax.swing.JButton();
        removeFromBookButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        moveUpButton = new javax.swing.JButton();
        moveDownButton = new javax.swing.JButton();
        allBookItemsButton = new javax.swing.JButton();
        noBookItemsButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        allOtherItemButton = new javax.swing.JButton();
        noOtherItemsButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        doneButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Name:");

        jLabel2.setText("Ingress:");

        ingressTextField.setColumns(20);
        ingressTextField.setRows(5);
        jScrollPane1.setViewportView(ingressTextField);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(42, 42, 42)
                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bookTunesPanel.setBackground(java.awt.Color.white);
        bookTunesPanel.setLayout(new javax.swing.BoxLayout(bookTunesPanel, javax.swing.BoxLayout.PAGE_AXIS));
        bookTunesScrollPane.setViewportView(bookTunesPanel);

        jLabel3.setText("Tunes in book:");

        otherTunesPanel.setBackground(java.awt.Color.white);
        otherTunesPanel.setLayout(new javax.swing.BoxLayout(otherTunesPanel, javax.swing.BoxLayout.PAGE_AXIS));
        otherTunesScrollPane.setViewportView(otherTunesPanel);

        jLabel4.setText("Tunes to add:");

        addToBookButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/IconLeft16.png"))); // NOI18N
        addToBookButton.setEnabled(false);
        addToBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToBookButtonActionPerformed(evt);
            }
        });

        removeFromBookButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/IconRight16.png"))); // NOI18N
        removeFromBookButton.setEnabled(false);
        removeFromBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFromBookButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(bookTunesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addToBookButton)
                            .addComponent(removeFromBookButton)))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(otherTunesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addComponent(jLabel4))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(addToBookButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(removeFromBookButton))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(otherTunesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bookTunesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );

        moveUpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/IconUp16.png"))); // NOI18N
        moveUpButton.setEnabled(false);
        moveUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveUpButtonActionPerformed(evt);
            }
        });

        moveDownButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/IconDown16.png"))); // NOI18N
        moveDownButton.setEnabled(false);
        moveDownButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveDownButtonActionPerformed(evt);
            }
        });

        allBookItemsButton.setText("All");
        allBookItemsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allBookItemsButtonActionPerformed(evt);
            }
        });

        noBookItemsButton.setText("None");
        noBookItemsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noBookItemsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(moveUpButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(moveDownButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allBookItemsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noBookItemsButton)
                .addContainerGap(127, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(allBookItemsButton)
                        .addComponent(noBookItemsButton))
                    .addComponent(moveDownButton)
                    .addComponent(moveUpButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        allOtherItemButton.setText("All");
        allOtherItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allOtherItemButtonActionPerformed(evt);
            }
        });

        noOtherItemsButton.setText("None");
        noOtherItemsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noOtherItemsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(allOtherItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(noOtherItemsButton)
                .addContainerGap(198, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allOtherItemButton)
                    .addComponent(noOtherItemsButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(doneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doneButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(24, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        cancel();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        ok();
    }//GEN-LAST:event_doneButtonActionPerformed

    private void moveDownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveDownButtonActionPerformed
        moveSelectedTunesDown();
    }//GEN-LAST:event_moveDownButtonActionPerformed

    private void moveUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveUpButtonActionPerformed
        moveSelectedTunesUp();
    }//GEN-LAST:event_moveUpButtonActionPerformed

    private void addToBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToBookButtonActionPerformed
        addSelectedTunesToBook();
    }//GEN-LAST:event_addToBookButtonActionPerformed

    private void removeFromBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFromBookButtonActionPerformed
        removeSeletedTunesFromBook();
    }//GEN-LAST:event_removeFromBookButtonActionPerformed

    private void allBookItemsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allBookItemsButtonActionPerformed
        selectAllBookItems();
    }//GEN-LAST:event_allBookItemsButtonActionPerformed

    private void noBookItemsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noBookItemsButtonActionPerformed
        deselectAllBookItems();
    }//GEN-LAST:event_noBookItemsButtonActionPerformed

    private void allOtherItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allOtherItemButtonActionPerformed
        selectAllOtherItems();
    }//GEN-LAST:event_allOtherItemButtonActionPerformed

    private void noOtherItemsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noOtherItemsButtonActionPerformed
        deselectAllOtherItems();
    }//GEN-LAST:event_noOtherItemsButtonActionPerformed

    @Override
    protected void accept() {
        updateBook();
    }

    private void updateBook() {
        book.setName(nameTextField.getText());
        book.setIngress(ingressTextField.getText());
        book.setTunes(bookTunes);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToBookButton;
    private javax.swing.JButton allBookItemsButton;
    private javax.swing.JButton allOtherItemButton;
    private javax.swing.JPanel bookTunesPanel;
    private javax.swing.JScrollPane bookTunesScrollPane;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton doneButton;
    private javax.swing.JTextArea ingressTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton moveDownButton;
    private javax.swing.JButton moveUpButton;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JButton noBookItemsButton;
    private javax.swing.JButton noOtherItemsButton;
    private javax.swing.JPanel otherTunesPanel;
    private javax.swing.JScrollPane otherTunesScrollPane;
    private javax.swing.JButton removeFromBookButton;
    // End of variables declaration//GEN-END:variables

    private void moveSelectedTunesUp() {
        List<Integer> selectedIndices = new ArrayList<>();
        for (Component c : bookTunesPanel.getComponents()) {
            BookItem item = (BookItem) c;
            if (item.isSelected()) {
                selectedIndices.add(item.getIndex() - 1);
                List<Tune> subList = bookTunes.subList(item.getIndex() - 1, item.getIndex() + 1);
                Collections.rotate(subList, 1);
            }
        }
        updateBookTunesPanel();
        int i = 0;
        for (Component c : bookTunesPanel.getComponents()) {
            if (selectedIndices.contains(i)) {
                ((BookItem) c).setSelected(true);
            }
            i++;
        }
    }

    private void moveSelectedTunesDown() {
        List<Integer> selectedIndices = new ArrayList<>();
        List<BookItem> items = new ArrayList<>();
        for (Component c : bookTunesPanel.getComponents()) {
            items.add(0, (BookItem) c);
        }
        for (BookItem item : items) {
            if (item.isSelected()) {
                selectedIndices.add(item.getIndex() + 1);
                List<Tune> subList = bookTunes.subList(item.getIndex(), item.getIndex() + 2);
                Collections.rotate(subList, -1);
            }
        }
        updateBookTunesPanel();
        int i = 0;
        for (Component c : bookTunesPanel.getComponents()) {
            if (selectedIndices.contains(i)) {
                ((BookItem) c).setSelected(true);
            }
            i++;
        }
    }

    private void addSelectedTunesToBook() {
        for (Component c : otherTunesPanel.getComponents()) {
            BookItem item = (BookItem) c;
            if (item.isSelected()) {
                bookTunes.add(item.getTune());
                otherTunes.remove(item.getTune());
            }
        }
        updatePanels();
        updateAddToBookButton();
    }

    private void removeSeletedTunesFromBook() {
        for (Component c : bookTunesPanel.getComponents()) {
            BookItem item = (BookItem) c;
            if (item.isSelected()) {
                bookTunes.remove(item.getTune());
                otherTunes.add(item.getTune());
            }
        }
        updatePanels();
        updateRemoveFromBookButton();
    }

    private boolean otherTunesPanelHasSelection() {
        for (Component c : otherTunesPanel.getComponents()) {
            BookItem item = (BookItem) c;
            if (item.isSelected()) {
                return true;
            }
        }
        return false;
    }

    private boolean bookTunesPanelHasSelection() {
        for (Component c : bookTunesPanel.getComponents()) {
            BookItem item = (BookItem) c;
            if (item.isSelected()) {
                return true;
            }
        }
        return false;
    }

    private boolean firstItemSelected() {
        if (bookTunesPanel.getComponentCount() > 0) {
            return ((BookItem) bookTunesPanel.getComponent(0)).isSelected();
        }
        return false;
    }

    private boolean lastItemSelected() {
        if (bookTunesPanel.getComponentCount() > 0) {
            return ((BookItem) bookTunesPanel.getComponent(bookTunesPanel.getComponentCount() - 1)).isSelected();
        }
        return false;
    }

    private void updateMoveUpButton() {
        moveUpButton.setEnabled(bookTunesPanelHasSelection() && !firstItemSelected());
    }

    private void updateMoveDownButton() {
        moveDownButton.setEnabled(bookTunesPanelHasSelection() && !lastItemSelected());
    }

    private void updateAddToBookButton() {
        addToBookButton.setEnabled(otherTunesPanelHasSelection());
    }

    private void updateRemoveFromBookButton() {
        removeFromBookButton.setEnabled(bookTunesPanelHasSelection());
    }

    private void selectAllBookItems() {
        toggleAllSelection(bookTunesPanel, true);
    }

    private void deselectAllBookItems() {
        toggleAllSelection(bookTunesPanel, false);
    }

    private void selectAllOtherItems() {
        toggleAllSelection(otherTunesPanel, true);
    }

    private void deselectAllOtherItems() {
        toggleAllSelection(otherTunesPanel, false);
    }

    private void toggleAllSelection(JPanel panel, boolean selected) {
        for (Component c : panel.getComponents()) {
            ((BookItem) c).setSelected(selected);
        }
    }

    private class BookItem extends JCheckBox {

        private final Tune tune;

        public BookItem(Tune tune) {
            super(tune.getName());
            super.addItemListener((ItemEvent e) -> {
                updateAddToBookButton();
                updateRemoveFromBookButton();
                updateMoveUpButton();
                updateMoveDownButton();
            });
            this.tune = tune;
        }

        public Tune getTune() {
            return tune;
        }

        public Integer getIndex() {
            Container c = getParent();
            if (c.equals(bookTunesPanel)) {
                int i = 0;
                for (Component item : bookTunesPanel.getComponents()) {
                    if (item.equals(this)) {
                        return i;
                    }
                    i++;
                }
            }
            return -1;
        }
    }
}
