package abc.music.editor.help;

import abc.music.editor.AbcMusicEditor;
import abc.music.editor.AmeConstants;
import abc.music.editor.gui.dialog.AmeDialog;
import nu.hex.abc.music.service.meta.AppInfo;
import nu.hex.abc.music.service.meta.MetaService;
import nu.hex.abc.music.service.properties.AbcMusicProperties;
import nu.hex.abc.music.service.properties.PropertyService;

/**
 *
 * @author hl
 */
public class AboutDialog extends AmeDialog<Void> {

    private final AbcMusicProperties properties = PropertyService.getProperties();

    public AboutDialog(AbcMusicEditor parent) {
        super(parent, "");
        infoLabel.setText(getInfoText());
    }

    @Override
    protected void init() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        infoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(java.awt.Color.white);

        jPanel1.setBackground(java.awt.Color.white);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Logo256Transparent.png"))); // NOI18N

        jLabel2.setFont(AmeConstants.BIG_TITLE_FONT);
        jLabel2.setForeground(AmeConstants.TITLE_COLOR);
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Hex ABC Music Editor");

        infoLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                    .addComponent(infoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(infoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    protected void accept() {
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel infoLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    private String getInfoText() {
        AppInfo appInfo = MetaService.getAppInfo();
        String info = "<html>";
        info += "<b>Product Version:</b> " + appInfo.getName() + " " + appInfo.getVersion() + "<br>";
        info += "<b>Vendor:</b> " + appInfo.getVendor() + "<br>";
        info += "<b>Last Build:</b> " + appInfo.getLastBuild() + "<br>";
        info += "<b>Project Directory:</b> " + properties.getProperty(AbcMusicProperties.PROJECT_FOLDER) + "<br>";
        info += "<b>Backup Directory:</b> " + properties.getProperty(AbcMusicProperties.BACKUP_FOLDER) + "<br>";
        info += "<b>ABC Directory:</b> " + properties.getProperty(AbcMusicProperties.ABC_FOLDER) + "<br>";
        if (properties.getProperty(AbcMusicProperties.LATEST_SAVED_PROJECT) != null) {
            info += "<b>Last Edited Project:</b> <i>\"" + properties.getProperty(AbcMusicProperties.LATEST_SAVED_PROJECT) + "\"</i><br>";
        }
        info += new StringBuilder("<b>Auto Open Latest Project:</b> ")
                .append(properties.getPropertyAsBoolean(AbcMusicProperties.AUTO_OPEN_LATEST_PROJECT) ? "on" : "off")
                .append("</b><br>").toString();
        info += new StringBuilder("<b>Keep Editor History:</b> ")
                .append(properties.getPropertyAsBoolean("preserve-project-history") ? "on" : "off")
                .append("</b><br>").toString();
        return info;
    }
}
