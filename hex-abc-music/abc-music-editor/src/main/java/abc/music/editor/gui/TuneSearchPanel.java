package abc.music.editor.gui;

import abc.music.core.domain.Tune;
import abc.music.editor.AbcMusicEditor;
import abc.music.editor.action.SearchTunesAction;
import java.awt.Component;
import java.awt.event.KeyEvent;

public class TuneSearchPanel extends AmeSidePanel {
    
    public TuneSearchPanel(AbcMusicEditor editor) {
        super(editor);
    }
    
    @Override
    protected void init() {
        initComponents();
        searchTextField.setEnabled(editor.getProject() != null);
    }
    
    private void clearSearchList() {
        resultPanel.removeAll();
        resultPanel.revalidate();
        resultPanel.repaint();
    }
    
    public void checkSearchEnabled() {
        searchTextField.setEnabled(editor.getProject() != null);
        if (editor.getProject() == null) {
            clearSearchList();
            searchTextField.setText("");
        }
    }
    
    public void add(Tune tune) {
        if (tune.getTitles() != null && !tune.getTitles().isEmpty()) {
            TuneItem item = new TuneItem(editor, tune);
            for (Component c : resultPanel.getComponents()) {
                if (c instanceof TuneItem) {
                    if (((TuneItem) c).equals(item)) {
                        resultPanel.remove(c);
                    }
                }
            }
            resultPanel.add(item, 0);
            resultPanel.repaint();
            resultPanel.revalidate();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultPanel = new javax.swing.JPanel();

        setOpaque(false);
        setLayout(new java.awt.BorderLayout());

        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyPressed(evt);
            }
        });
        add(searchTextField, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setOpaque(false);

        resultPanel.setBackground(java.awt.Color.white);
        resultPanel.setLayout(new javax.swing.BoxLayout(resultPanel, javax.swing.BoxLayout.PAGE_AXIS));
        jScrollPane1.setViewportView(resultPanel);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void searchTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyPressed
        searchTunes(evt);
    }//GEN-LAST:event_searchTextFieldKeyPressed
    
    private void searchTunes(KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            clearSearchList();
            SearchTunesAction searchAction = new SearchTunesAction(editor, searchTextField.getText());
            searchAction.actionPerformed(null);
            if (!searchAction.get().isEmpty()) {
                searchAction.get().stream().forEach(this::add);
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JTextField searchTextField;
    // End of variables declaration//GEN-END:variables
}
